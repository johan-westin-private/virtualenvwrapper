[build-system]
requires = ['hatchling', 'hatch-vcs']
build-backend = 'hatchling.build'

[project]
# version = '5.0.0.dev0'
name = 'virtualenvwrapper'
dynamic = ['version']
description = 'Enhancements to virtualenv'
readme = 'README.txt'
requires-python = '>=3.7'
license = 'MIT'
# license-files = { paths = ['LICENSE'] }
keywords = []
authors = [
    { name = 'Doug Hellmann', email = 'doug@doughellmann.com' },
]
classifiers = [
    'Development Status :: 4 - Beta',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: Implementation :: CPython',
]
dependencies = [
    'virtualenv',
    'virtualenv-clone',
    'stevedore',
]

[project.urls]
HomePage = 'https://virtualenvwrapper.readthedocs.io/'

[tool.hatch.build.hooks.vcs]
version-file = 'virtualenvwrapper/_version.py'

[tool.hatch.build.targets.sdist]
include = [
    '/virtualenvwrapper'
]

[tool.hatch.build.targets.wheel]
packages = [
    'virtualenvwrapper',
]

[tool.hatch.build.targets.wheel.force-include]
'docs/build' = 'docs/virtualenvwrapper'
'typeshed/pyi/virtualenvwrapper' = 'typeshed/pyi/virtualenvwrapper'

[tool.hatch.build.targets.wheel.shared-data]
bin = './bin'

[tool.hatch.build.sources]
'docs/build' = 'docs/virtualenvwrapper'

[tool.hatch.version]
source = 'vcs'

[tool.hatch.envs.default]
dependencies = [
    'coverage[toml]>=6.5',
    'pytest',
]
[tool.hatch.envs.default.scripts]
test = 'pytest {args:tests}'
test-cov = 'coverage run -m pytest {args:tests}'
cov-report = [
    '- coverage combine',
    'coverage report',
]
cov = [
    'test-cov',
    'cov-report',
]

[[tool.hatch.envs.all.matrix]]
python = ['3.7', '3.8', '3.9', '3.10', '3.11']

[tool.hatch.envs.lint]
detached = true
dependencies = [
    'black>=23.1.0',
    'mypy>=1.0.0',
    'ruff>=0.0.243',
]
[tool.hatch.envs.lint.scripts]
typing = 'mypy --install-types --non-interactive {args:virtualenvwrapper tests}'
style = [
    'ruff {args:.}',
    'black --check --diff {args:.}',
]
fmt = [
    'black {args:.}',
    'ruff --fix {args:.}',
    'style',
]
all = [
    'style',
    'typing',
]

[tool.black]
target-version = ['py37']
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = 'py37'
line-length = 120
select = [
    'A',
    'ARG',
    'B',
    'C',
    'DTZ',
    'E',
    'EM',
    'F',
    'FBT',
    'I',
    'ICN',
    'ISC',
    'N',
    'PLC',
    'PLE',
    'PLR',
    'PLW',
    'Q',
    'RUF',
    'S',
    'T',
    'TID',
    'UP',
    'W',
    'YTT',
]
ignore = [
    # Allow non-abstract empty methods in abstract base classes
    'B027',
    # Allow boolean positional values in function calls, like `dict.get(... True)`
    'FBT003',
    # Ignore checks for possible passwords
    'S105', 'S106', 'S107',
    # Ignore complexity
    'C901', 'PLR0911', 'PLR0912', 'PLR0913', 'PLR0915',
]
unfixable = [
    # Don't touch unused imports
    'F401',
]

[tool.ruff.isort]
known-first-party = ['virtualenvwrapper']

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = 'all'

[tool.ruff.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
'tests/**/*' = ['PLR2004', 'S101', 'TID252']

[tool.coverage.run]
source_pkgs = ['virtualenvwrapper', 'tests']
branch = true
parallel = true
omit = [
    'virtualenvwrapper/_version.py',
]

[tool.coverage.paths]
virtualenvwrapper = ['virtualenvwrapper', '*/virtualenvwrapper/virtualenvwrapper']
tests = ['tests', '*/virtualenvwrapper/tests']

[tool.coverage.report]
exclude_lines = [
    'no cov',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
]

[tool.sphinx-pyproject]
author = 'Doug Hellmann'
project = 'virtualenvwrapper'
copyright = '2009-2023 Doug Hellmann'
language = 'en'
package_root = 'virtualenvwrapper'
gitstamp_fmt = '%d %b %Y'
templates_path = [ '_templates',]
html_static_path = [ '_static',]
source_suffix = '.rst'
master_doc = 'index'
suppress_warnings = [ 'image.nonlocal_uri',]
exclude_trees = ['_build']
pygments_style = 'sphinx'
html_theme = 'default'
html_theme_path = [ '../..',]
html_show_sourcelink = true
toctree_plus_types = [
    'class',
    'confval',
    'data',
    'directive',
    'enum',
    'exception',
    'flag',
    'function',
    'namedtuple',
    'protocol',
    'role',
    'typeddict',
]
add_module_names = false
hide_none_rtype = true
all_typevars = true
overloads_location = 'bottom'
html_codeblock_linenos_style = 'table'
autodoc_exclude_members = [
    '__dict__',
    '__class__',
    '__dir__',
    '__weakref__',
    '__module__',
    '__annotations__',
    '__orig_bases__',
    '__parameters__',
    '__subclasshook__',
    '__init_subclass__',
    '__attrs_attrs__',
    '__init__',
    '__new__',
    '__getnewargs__',
    '__abstractmethods__',
    '__hash__',
]
